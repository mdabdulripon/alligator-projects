services:

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootPassword
      MYSQL_DATABASE: users_db
      MYSQL_USER: admin
      MYSQL_PASSWORD: adminPassword
    restart: always
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
  
  postgres:
    image: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: adminPassword
      POSTGRES_DB: MerchantDb
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  users:
    build:
      context: .
      dockerfile: UsersWebAPI/Dockerfile
    container_name: UsersWebAPI
    image: users
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/users_db?serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: adminPassword
      TOKEN_SECRET: bhs9ASDhf7835hf5785sdws7hF9385fjordsFH89fj3hfHf98wEFHf8d9hf8WEFT98wef9wef3WEF3f9f
    depends_on:
      - mysql
    ports:
      - "8081:8081"

  merchant:
    build:
      context: .
      dockerfile: MerchantWebAPI/Merchant.API/Dockerfile
    container_name: MerchantWebAPI
    image: merchant
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8082
      - "ConnectionStrings:dbConnectionString=Server=postgres;Port=5432;Database=MerchantDb;User Id=admin;Password=adminPassword;"
    depends_on:
      - postgres
    ports:
      - "8082:8082"

  catalog:
    build:
      context: .
      dockerfile: CatalogWebAPI/Catalog.API/Dockerfile
    container_name: CatalogWebAPI
    image: catalog
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8083
      - "ConnectionStrings:dbConnectionString=Server=postgres;Port=5432;Database=CatalogDb;User Id=admin;Password=adminPassword;"
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    depends_on:
      - postgres
    ports:
      - "8083:8083"  

  blog:
    build:
      context: .
      dockerfile: BlogWebAPI/Dockerfile
    container_name: BlogWebAPI
    image: blog
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/blogs_db?serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: adminPassword
    depends_on:
      - mysql
    ports:
      - "8088:8088"        
  
  fileupload:
    build:
      context: .
      dockerfile: FileUploadWebAPI/Dockerfile
    container_name: FileUploadWebAPI
    image: fileupload
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/file_upload_db?serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: adminPassword
    depends_on:
      - mysql
    ports:
      - "8089:8089"        

volumes:
  postgres_data:
  mysql_data:
